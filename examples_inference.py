"""
Exemplos pr√°ticos de uso da infer√™ncia com modelos treinados.

Execute este arquivo para ver diferentes formas de usar modelos salvos.
"""

from pathlib import Path
import pandas as pd
from src.ep1.inference import (
    ModelPredictor,
    load_all_models,
    predict_with_all_models,
    quick_predict
)


def exemplo_1_basico():
    """Exemplo b√°sico: carregar modelo e fazer predi√ß√£o."""
    print("\n" + "="*70)
    print("EXEMPLO 1: Predi√ß√£o B√°sica")
    print("="*70)
    
    # Verificar se existem modelos
    models_dir = Path("models")
    model_files = list(models_dir.glob("*.joblib"))
    
    if not model_files:
        print("‚ö†Ô∏è  Nenhum modelo encontrado em /models")
        print("   Execute: uv run src/ep1/train.py --dataset arcaico_moderno --model tfidf_lr --save")
        return
    
    # Usar o primeiro modelo dispon√≠vel
    model_path = model_files[0]
    print(f"\nüì¶ Carregando modelo: {model_path.name}")
    
    predictor = ModelPredictor(model_path)
    print(f"   Classes: {list(predictor.classes)}")
    
    # Fazer predi√ß√µes
    textos = [
        "Este √© um exemplo de texto moderno e contempor√¢neo",
        "Outrossim, cumpre-nos manifestar nosso intento",
        "A intelig√™ncia artificial est√° revolucionando tudo"
    ]
    
    print("\nüîÆ Fazendo predi√ß√µes:")
    predicoes = predictor.predict(textos)
    
    for texto, pred in zip(textos, predicoes):
        print(f"   '{texto[:50]}...' ‚Üí {pred}")


def exemplo_2_com_probabilidades():
    """Exemplo com probabilidades e confian√ßa."""
    print("\n" + "="*70)
    print("EXEMPLO 2: Predi√ß√µes com Probabilidades")
    print("="*70)
    
    models_dir = Path("models")
    model_files = list(models_dir.glob("*.joblib"))
    
    if not model_files:
        print("‚ö†Ô∏è  Nenhum modelo encontrado")
        return
    
    predictor = ModelPredictor(model_files[0])
    
    textos = [
        "Texto com caracter√≠sticas muito claras",
        "Texto amb√≠guo que pode ser classificado de v√°rias formas"
    ]
    
    print(f"\nüìä Predi√ß√µes com confian√ßa:")
    df = predictor.predict_with_confidence(textos)
    
    # Mostrar resultado formatado
    pd.set_option('display.max_columns', None)
    pd.set_option('display.width', None)
    pd.set_option('display.max_colwidth', 50)
    
    print(df.to_string(index=False))
    
    # Analisar confian√ßa
    print(f"\nüìà An√°lise de confian√ßa:")
    print(f"   Confian√ßa m√©dia: {df['confidence'].mean():.2%}")
    print(f"   Confian√ßa m√≠nima: {df['confidence'].min():.2%}")
    print(f"   Confian√ßa m√°xima: {df['confidence'].max():.2%}")


def exemplo_3_csv():
    """Exemplo: processar arquivo CSV."""
    print("\n" + "="*70)
    print("EXEMPLO 3: Processar CSV")
    print("="*70)
    
    models_dir = Path("models")
    model_files = list(models_dir.glob("*.joblib"))
    
    if not model_files:
        print("‚ö†Ô∏è  Nenhum modelo encontrado")
        return
    
    # Criar CSV de exemplo
    csv_exemplo = "exemplo_textos.csv"
    df_exemplo = pd.DataFrame({
        'text': [
            "Primeiro texto para classificar",
            "Segundo texto com caracter√≠sticas diferentes",
            "Terceiro texto de exemplo",
            "Quarto e √∫ltimo texto"
        ],
        'id': [1, 2, 3, 4]
    })
    
    print(f"\nüìù Criando CSV de exemplo: {csv_exemplo}")
    df_exemplo.to_csv(csv_exemplo, sep=';', index=False, encoding='ISO-8859-1')
    print(f"   {len(df_exemplo)} linhas criadas")
    
    # Processar CSV
    predictor = ModelPredictor(model_files[0])
    
    print(f"\nüîÑ Processando CSV com modelo: {model_files[0].name}")
    resultado = predictor.predict_from_csv(
        csv_exemplo,
        output_csv="exemplo_resultado.csv",
        include_probabilities=True,
        sep=';',
        encoding='ISO-8859-1'
    )
    
    print(f"\n‚úÖ Resultado:")
    print(resultado[['id', 'text', 'prediction', 'confidence']].to_string(index=False))
    
    # Limpar arquivos de exemplo
    Path(csv_exemplo).unlink(missing_ok=True)
    Path("exemplo_resultado.csv").unlink(missing_ok=True)
    print("\nüóëÔ∏è  Arquivos de exemplo removidos")


def exemplo_4_multiplos_modelos():
    """Exemplo: aplicar m√∫ltiplos modelos."""
    print("\n" + "="*70)
    print("EXEMPLO 4: M√∫ltiplos Modelos")
    print("="*70)
    
    models_dir = Path("models")
    
    print("\nüì¶ Carregando todos os modelos dispon√≠veis...")
    modelos = load_all_models(models_dir)
    
    if not modelos:
        print("‚ö†Ô∏è  Nenhum modelo encontrado")
        return
    
    print(f"\n‚úÖ {len(modelos)} modelo(s) carregado(s)")
    
    # Aplicar todos os modelos
    textos = [
        "Este √© um texto moderno e contempor√¢neo",
        "Outrossim, manifesto meu intento"
    ]
    
    print(f"\nüîÆ Aplicando todos os modelos:")
    df = predict_with_all_models(textos, models_dir)
    
    print(df.to_string(index=False))


def exemplo_5_filtragem_confianca():
    """Exemplo: filtrar por confian√ßa."""
    print("\n" + "="*70)
    print("EXEMPLO 5: Filtrar por Confian√ßa")
    print("="*70)
    
    models_dir = Path("models")
    model_files = list(models_dir.glob("*.joblib"))
    
    if not model_files:
        print("‚ö†Ô∏è  Nenhum modelo encontrado")
        return
    
    predictor = ModelPredictor(model_files[0])
    
    # Criar dados de teste
    textos = [
        f"Texto de exemplo n√∫mero {i} com caracter√≠sticas variadas"
        for i in range(10)
    ]
    
    print(f"\nüîÆ Fazendo predi√ß√µes para {len(textos)} textos...")
    df = predictor.predict_with_confidence(textos)
    
    # Filtrar por confian√ßa
    limiar = 0.7
    df_confiavel = df[df['confidence'] >= limiar]
    df_incerto = df[df['confidence'] < limiar]
    
    print(f"\nüìä An√°lise de confian√ßa (limiar = {limiar:.0%}):")
    print(f"   Total: {len(df)}")
    print(f"   Confi√°vel (‚â•{limiar:.0%}): {len(df_confiavel)} ({len(df_confiavel)/len(df)*100:.1f}%)")
    print(f"   Incerto (<{limiar:.0%}): {len(df_incerto)} ({len(df_incerto)/len(df)*100:.1f}%)")
    
    if len(df_incerto) > 0:
        print(f"\n‚ö†Ô∏è  Textos com baixa confian√ßa:")
        for idx, row in df_incerto.iterrows():
            print(f"   '{row['text'][:40]}...' ‚Üí {row['prediction']} ({row['confidence']:.2%})")


def exemplo_6_quick_predict():
    """Exemplo: uso r√°pido com quick_predict."""
    print("\n" + "="*70)
    print("EXEMPLO 6: Predi√ß√£o R√°pida (quick_predict)")
    print("="*70)
    
    models_dir = Path("models")
    model_files = list(models_dir.glob("*.joblib"))
    
    if not model_files:
        print("‚ö†Ô∏è  Nenhum modelo encontrado")
        return
    
    # Pegar nome do modelo (sem extens√£o)
    model_name = model_files[0].stem
    
    print(f"\n‚ö° Usando quick_predict com: {model_name}")
    
    texto = "Este √© um texto para classifica√ß√£o r√°pida"
    resultado = quick_predict(model_name, texto)
    
    print(f"\n   Texto: '{texto}'")
    print(f"   Predi√ß√£o: {resultado[0]}")


def exemplo_7_info_modelo():
    """Exemplo: inspecionar informa√ß√µes do modelo."""
    print("\n" + "="*70)
    print("EXEMPLO 7: Informa√ß√µes do Modelo")
    print("="*70)
    
    models_dir = Path("models")
    model_files = list(models_dir.glob("*.joblib"))
    
    if not model_files:
        print("‚ö†Ô∏è  Nenhum modelo encontrado")
        return
    
    for model_file in model_files:
        predictor = ModelPredictor(model_file)
        
        print(f"\nüìã {model_file.name}")
        print(f"   Classes: {list(predictor.classes)}")
        print(f"   N√∫mero de classes: {len(predictor.classes)}")
        
        if hasattr(predictor.model, 'steps'):
            print(f"   Pipeline steps:")
            for step_name, step_obj in predictor.model.steps:
                print(f"      - {step_name}: {step_obj.__class__.__name__}")


def main():
    """Executa todos os exemplos."""
    print("\n" + "üéØ" + " EXEMPLOS DE INFER√äNCIA COM MODELOS TREINADOS ".center(68, "="))
    
    exemplos = [
        exemplo_1_basico,
        exemplo_2_com_probabilidades,
        exemplo_3_csv,
        exemplo_4_multiplos_modelos,
        exemplo_5_filtragem_confianca,
        exemplo_6_quick_predict,
        exemplo_7_info_modelo
    ]
    
    for exemplo in exemplos:
        try:
            exemplo()
        except Exception as e:
            print(f"\n‚ùå Erro no {exemplo.__name__}: {e}")
    
    print("\n" + "="*70)
    print("‚úÖ Exemplos conclu√≠dos!")
    print("="*70)
    print("\nüí° Dicas:")
    print("   - Use ModelPredictor para controle completo")
    print("   - Use quick_predict para predi√ß√µes r√°pidas")
    print("   - Use predict_with_all_models para comparar modelos")
    print("   - Sempre verifique a confian√ßa das predi√ß√µes")
    print("\nüìö Mais informa√ß√µes: PREDICT_GUIDE.md")
    print()


if __name__ == "__main__":
    main()
