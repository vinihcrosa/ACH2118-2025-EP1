name: CI - Tests and Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: |
        uv sync
        
    - name: Check code formatting
      run: |
        echo "Checking Python code formatting..."
        uv run python -m py_compile src/ep1/*.py src/ep1/models/*.py
        
    - name: Test imports
      run: |
        echo "Testing module imports..."
        uv run python -c "from src.ep1.config import get_default_config; print('✓ Config OK')"
        uv run python -c "from src.ep1.train import main; print('✓ Train OK')"
        uv run python -c "from src.ep1.experiments import run_experiments; print('✓ Experiments OK')"
        uv run python -c "from src.ep1.report import generate_report; print('✓ Report OK')"
        
    - name: Validate JSON configuration
      run: |
        echo "Validating pipelines.json..."
        uv run python -c "
        import json
        with open('config/pipelines.json') as f:
            config = json.load(f)
        print(f'✓ JSON válido')
        print(f'✓ {len(config[\"models\"])} modelos configurados')
        print(f'✓ {len(config[\"experiments\"])} experimentos configurados')
        "
        
    - name: Test model creation
      run: |
        echo "Testing model creation..."
        uv run python -c "
        from src.ep1.config import get_default_config
        config = get_default_config()
        
        # Testar criação de cada modelo
        for model_name in config._config['models'].keys():
            model = config.get_model(model_name)
            print(f'✓ {model_name} criado com sucesso')
        "
        
    - name: Quick training test
      run: |
        echo "Running quick training test..."
        uv run python -c "
        from src.ep1.config import get_default_config
        import pandas as pd
        
        # Carregar config
        config = get_default_config()
        
        # Dados de teste
        X_train = ['texto exemplo 1', 'texto exemplo 2', 'texto exemplo 3', 'texto exemplo 4']
        y_train = ['classe1', 'classe2', 'classe1', 'classe2']
        
        # Testar um modelo simples
        model = config.get_model('tfidf_lr')
        model.fit(X_train, y_train)
        predictions = model.predict(X_train)
        print(f'✓ Treinamento rápido bem-sucedido')
        print(f'  Predições: {predictions}')
        "
        
    - name: Create test summary
      if: always()
      run: |
        echo "# ✅ CI Tests Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
